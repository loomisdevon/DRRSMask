import numpy as np
import matplotlib.pyplot as plt
import csv
import random as rd
import os

gammasignalarr = np.array([185.08275,
185.7003333,
174.92765,
168.4979545,
161.335125,
154.6018846,
152.7854286,
150.9314,
150.0735312,
139.9219688,
135.949875,
128.8532812,
124.9724687,
124.8922188,
124.1894375,
121.4590938,
118.4564688,
119.8262188,
116.5793437,
116.09825,
117.5697188,
118.7575938,
116.36325,
116.5871562,
116.886875,
112.9905,
111.6965938,
113.3694375,
113.2784062,
110.4604375,
111.1153438,
108.7693438,
105.9640938,
105.4718438,
105.7250938,
104.5383438,
103.7814062,
103.7750938,
102.5968438,
104.1585313,
105.791625,
105.8087188,
108.212,
111.6325938,
115.4697813,
117.4400937,
122.7074688,
126.4179062,
128.3423125,
132.2270625,
132.7639687,
134.4059375,
134.0194375,
137.7129062,
135.112625,
133.316375,
132.1031875,
129.231625,
127.0155,
124.0806875,
123.5923438,
118.96925,
118.26225,
117.5619375,
119.0444375,
122.27775,
124.9034375,
128.7127187,
130.1482812,
135.509375,
138.73325,
143.1940312,
147.9698438,
149.5609063,
153.4051875,
154.95025,
160.620375,
160.5050313,
163.91125,
164.80825,
162.4565313,
164.78875,
168.2173125,
169.8456563,
168.319125,
174.0040937,
177.1271875,
177.9875312,
180.3772813,
183.527875,
181.655875,
186.617625,
192.1736875,
194.5229688,
190.7077188,
192.0906875,
194.1546875,
195.148125,
202.0360625,
203.5220937,
200.687375,
195.8427188,
199.2990312,
201.1956563,
202.7166875,
201.394625,
198.0054375,
191.9640938,
189.0646875,
187.6815625,
185.994375,
179.5860313,
171.0900938,
165.2475313,
156.9227188,
150.3461875,
147.9458438,
145.5630938,
138.4015625,
134.3357188,
133.291125,
129.4395,
130.9588438,
137.7660625,
138.3515313,
140.6766563,
146.0952188,
155.0032188,
164.20875,
178.6289375,
190.5186875,
194.3277813,
207.212875,
220.4162187,
232.7258437,
244.2410625,
256.9057812,
268.5878437,
275.018625,
288.4927812,
295.5049063,
298.2512187,
302.0177813,
307.0034375,
311.6249688,
310.8910313,
315.87275,
313.885625,
312.578625,
313.082875,
314.9477188,
313.754875,
309.2327813,
308.0827187,
306.30375,
310.2660938,
308.8167813,
309.1743438,
307.9875625,
305.9434375,
301.1027188,
298.9333125,
297.18525,
288.3600625,
282.7297188,
276.0559063,
268.38525,
255.6433438,
246.955125,
236.8959687,
223.2015312,
213.9859687,
204.3440937,
198.316,
187.60425,
184.3300313,
184.4179062,
179.4929062,
177.9791563,
175.882375,
181.50925,
183.9427187,
192.798125,
201.6841875,
204.1910625,
208.4280625,
212.9539063,
223.4685,
228.3005938,
232.5965313,
234.88225,
234.6811875,
235.2296875,
239.4105313,
244.7602812,
239.6540625,
238.3528125,
234.8688438,
230.71975,
226.7410313,
226.1685,
224.2681875,
215.6140938,
213.8821562,
203.9339063,
195.0386563,
188.52,
181.4789063,
173.0098438,
163.6472188,
156.0248125,
143.7182813,
136.4726875,
132.2899688,
123.3254375,
118.2064063,
111.9986875,
106.8953125,
103.7526563,
105.0079375,
104.6697813,
102.9294062,
107.593875,
108.8413438,
110.4669375,
110.8275,
114.4432813,
114.4696875,
121.2538438,
124.2059375,
123.5179375,
121.8759375,
121.8112188,
123.5628125,
121.11825,
122.7678125,
116.77375,
113.0188125,
109.2607813,
107.9570625,
105.9818438,
102.3131875,
98.09453125,
93.0143125,
90.44378125,
87.11759375,
86.08825,
86.51259375,
86.863625,
87.444125,
91.9579375,
96.42953125,
100.4841875,
108.9325938,
117.7895313,
123.5782813,
133.1522188,
143.21375,
153.2078125,
163.3035313,
172.4365,
179.3455313,
185.0729063,
193.0475,
198.6170313,
203.6980625,
203.3099687,
199.8025312,
197.3379062,
195.9394063,
192.5946875,
190.6826562,
182.800125,
170.6975313,
162.0250625,
157.7348125,
153.4521875,
149.7025625,
147.8019375,
142.3029063,
139.2694688,
140.8599063,
146.0351875,
150.4217813,
155.2248125,
158.2814688,
167.8435,
175.1204375,
185.3462812,
197.8343438,
208.8981875,
214.9186875,
224.3000313,
234.2084687,
234.6492188,
242.4678125,
249.6299688,
251.6542187,
249.9858125,
253.4104375,
247.5598438,
239.1201562,
235.4992187,
225.4226563,
213.3925938,
201.2495,
188.7736875,
171.97925,
160.2967813,
148.1545625,
132.3586563,
121.6973125,
108.7932813,
99.05246875,
90.129875,
84.616875,
78.86015625,
74.5913125,
74.51846875,
69.49884375,
68.87284375,
68.95959375,
69.9753125,
70.23675,
71.56596875,
73.2554375,
72.3159375,
74.451625,
76.04284375,
76.32865625,
76.22259375,
77.4811875,
77.80709375,
77.979,
80.06571875,
80.38953125,
81.81390625,
84.19246875,
87.04109375,
91.07021875,
93.665375,
100.8819062,
107.5184375,
117.9996562,
127.7629063,
136.1264063,
149.9530625,
158.0225,
172.98475,
186.1925625,
197.9350938,
204.201625,
211.8191562,
222.3521,
224.5148571,
234.3125385,
240.1378333,
241.0539091,
239.55225,
245.2488889
], dtype=np.float64)


thermalsignalarr = np.array([13.86215625,
14.49971667,
15.752385,
17.04497727,
18.054925,
17.20142308,
17.19884286,
17.72176333,
17.64093125,
18.4924625,
19.01106563,
19.12973437,
18.64164375,
18.93032813,
19.282325,
19.27752813,
19.63638438,
19.71212188,
19.42945313,
19.66062812,
19.59224375,
19.91979063,
20.28267188,
20.6259375,
20.87409375,
20.550675,
20.7486,
20.21340937,
19.99815313,
19.45039688,
18.5796375,
17.87449688,
16.77110313,
15.9646625,
14.81612188,
13.83107188,
12.85560938,
11.8427375,
11.41460313,
10.71147187,
10.09870625,
9.427334375,
9.239903125,
9.119878125,
9.32596875,
10.29085937,
10.34347187,
10.53245312,
10.40687187,
10.65560312,
10.67300938,
11.04865625,
11.617575,
11.22352813,
11.41131562,
11.14098438,
11.0059,
10.75713438,
10.59506563,
10.30829063,
9.36758125,
8.762621875,
8.179015625,
7.696448125,
7.650648125,
7.412459375,
6.976729375,
6.23227625,
5.6302575,
5.5093325,
5.1442425,
5.189761875,
4.894303437,
4.601134688,
4.479246875,
4.212870625,
4.230399375,
4.0451675,
3.978125,
4.038119063,
3.888592813,
4.010461563,
3.95309375,
4.031076875,
3.974783437,
3.582350094,
3.907579469,
3.626583844,
3.753693844,
3.841425406,
3.880318531,
3.766320406,
3.507167063,
3.768693531,
3.527857281,
3.395004469,
3.293331969,
3.185166031,
2.994674781,
3.105968844,
3.221472813,
3.198709375,
2.940722188,
3.0867675,
3.360249687,
3.42218125,
3.430304687,
3.36000625,
3.476369687,
3.477812813,
3.996669063,
4.216104063,
4.303281563,
4.087656563,
4.285734063,
4.398197188,
4.568363125,
4.895919063,
4.821417188,
4.864294688,
4.489436563,
4.757203438,
4.594182813,
4.565795625,
4.445695625,
4.344034063,
4.124741563,
4.020638125,
4.419440313,
4.638351875,
4.879060938,
4.812874687,
4.984597813,
4.701894375,
4.869410312,
5.186016875,
5.327819375,
5.343523125,
5.100994375,
5.110959375,
4.876202813,
4.943567813,
4.823662188,
4.528534688,
4.130723125,
3.56765,
3.376668125,
3.272046875,
3.42100125,
3.411452187,
3.615862813,
3.660479375,
3.906516875,
4.473704063,
5.171448125,
5.913225938,
6.543134688,
7.647930625,
8.823065,
10.78813937,
12.87962,
14.83592469,
16.72755437,
18.73609812,
20.70525625,
22.51524688,
24.61789062,
26.49249062,
27.8864875,
29.94925312,
32.01515937,
33.93949063,
36.00875625,
38.20414062,
40.22606875,
41.82914375,
43.82502812,
45.06317813,
45.81636563,
46.33016875,
47.68999375,
48.477725,
48.9184125,
48.5278,
47.579875,
45.95299375,
44.1471125,
43.02287812,
40.29784063,
37.76917812,
34.87330938,
32.41097188,
29.93947813,
27.99328125,
26.34738438,
24.18698438,
22.41042813,
20.83700625,
19.5073625,
18.48708125,
17.3757,
16.7291,
16.65571563,
16.59792187,
16.932575,
17.49209062,
18.314375,
18.64266563,
19.72540313,
20.82886875,
22.05831563,
23.7705625,
25.41865625,
26.49787813,
27.547225,
29.26217188,
30.63733125,
31.65575625,
32.91459375,
33.25054063,
32.971725,
33.29480938,
33.43609688,
33.46365937,
33.202475,
33.59473125,
33.23316875,
32.62845938,
32.092875,
31.28403438,
30.62475625,
30.0472125,
29.7292,
29.03047188,
28.22802813,
27.53709375,
27.385675,
26.67420938,
25.584575,
23.96179375,
22.37715,
20.9247125,
19.3425625,
18.2341125,
16.48103281,
14.96628594,
13.37070437,
12.11812719,
10.97603906,
9.38497875,
8.027229063,
6.726989688,
6.016829375,
5.340548125,
4.933529688,
4.751409375,
4.34589,
4.38491,
4.45414375,
4.267683125,
4.001088438,
3.888139687,
3.976664687,
3.91894,
4.10503375,
4.057371875,
3.81302125,
3.898875937,
3.922894688,
3.947596875,
4.180996875,
3.93948875,
4.005812813,
4.043983438,
4.19329625,
4.220369062,
4.289621875,
4.508015625,
4.10783,
4.430929375,
4.462492812,
4.236769375,
4.082719375,
4.15531625,
4.158017188,
4.171435312,
4.33972125,
4.440288438,
4.351078125,
4.637699375,
5.080115938,
5.212716562,
5.6500475,
6.107319688,
6.567800625,
6.851158125,
7.852569687,
8.250031563,
8.67589375,
9.378246875,
10.02449063,
10.223025,
10.27308438,
10.58992594,
9.91563625,
9.804933125,
9.65206375,
9.381399688,
8.815526875,
8.348451875,
7.881262188,
7.328737188,
6.867705,
6.508685625,
6.071622188,
5.849788438,
5.894608125,
6.21692375,
6.486579063,
6.38596875,
7.07685,
7.839313125,
8.904845938,
9.815021875,
10.63073125,
10.7151,
11.14091875,
12.04035,
12.63279063,
12.96282188,
12.8251125,
12.37505,
11.67732375,
11.46823906,
11.31726094,
10.79908281,
9.991589063,
9.095245313,
8.274254688,
7.647825312,
6.901618438,
6.4929,
6.11320625,
5.723984375,
5.4674725,
5.364475625,
5.43699125,
5.597606563,
5.906199063,
6.070155313,
6.050255313,
6.031474688,
6.199449063,
6.275905667,
6.488909643,
6.409662308,
6.515313333,
6.471914545,
6.440466,
6.967755556
], dtype=np.float64)


fastsignalarr = np.array([267.7720625,
267.1341111,
265.78435,
264.8280455,
259.9984167,
258.8266154,
258.0566429,
256.7723,
257.5639063,
254.779625,
253.5674375,
251.20275,
251.9825313,
252.262625,
251.3673438,
253.6945938,
253.1387813,
254.8782188,
257.1081563,
259.3944375,
260.08975,
262.5290313,
265.1587188,
265.5390938,
266.7651875,
267.9698125,
266.9445938,
266.427125,
268.0694688,
265.9949063,
265.7408125,
264.4837813,
261.76225,
258.8557188,
257.3250625,
256.0063125,
252.3560625,
251.268375,
248.9139375,
245.82575,
245.5107813,
245.2922187,
245.4950313,
243.6214688,
242.7024688,
243.5939688,
244.2125625,
247.3927812,
249.163875,
251.8140313,
253.5001875,
257.4777188,
261.9148438,
265.1374375,
269.0914375,
271.853625,
274.5394687,
277.9882813,
281.38075,
284.0675,
286.6249688,
288.2413438,
289.9638438,
289.5335,
289.417875,
286.5400938,
284.3456563,
281.154375,
277.6237187,
275.2527813,
270.9886875,
268.9826875,
266.4365625,
264.5770625,
261.3695,
260.3303438,
259.9804688,
257.6302813,
257.4035,
258.0165625,
259.703125,
262.7715625,
266.5677188,
270.5862188,
272.5998438,
276.25175,
279.294625,
281.6941563,
284.3710313,
285.21575,
287.1371563,
290.36375,
293.68175,
296.4790313,
297.7869688,
298.6671875,
298.8519687,
297.9205937,
299.2673125,
295.9470625,
296.27425,
296.6231875,
298.1155,
299.5047812,
299.6817188,
300.9546875,
299.2030313,
300.8121563,
301.9033125,
301.7195625,
300.219625,
299.0575625,
297.8609062,
298.152625,
297.8403438,
296.6114688,
292.507,
288.3476875,
282.9773438,
278.1704063,
275.5788125,
270.7362188,
265.4130625,
259.0256875,
254.1810938,
249.1255313,
247.3559688,
245.6065938,
241.5860313,
238.9854688,
236.6739375,
235.9752187,
234.4835,
233.6425938,
232.7100625,
232.3950625,
233.7455625,
233.9317813,
235.677625,
235.3561563,
235.2413438,
236.8138438,
237.0885938,
237.1277188,
236.072,
236.2116563,
235.296625,
236.4406563,
237.3899688,
236.7945625,
238.0401563,
238.2649375,
238.04575,
238.338,
238.7531875,
236.4693437,
236.0784688,
235.9615938,
234.37275,
232.8340625,
232.4449375,
231.747625,
229.7918438,
231.427625,
231.0495313,
232.1082188,
233.8152813,
233.775125,
235.296125,
236.668125,
240.7444062,
242.9675312,
246.353,
250.2128125,
251.8528125,
257.0570625,
260.8077813,
262.4442813,
263.8194063,
265.3188438,
267.13825,
267.5532813,
268.8819688,
269.5935,
266.7315625,
266.916,
266.733125,
265.2351875,
264.0744688,
262.24,
262.0995938,
259.198,
260.7325938,
261.297875,
259.777875,
260.7650313,
260.984,
261.1355313,
260.6016875,
262.9085625,
263.9145,
264.4513438,
266.4693125,
266.6874375,
265.58725,
265.6660625,
265.3856875,
264.1247813,
262.8773438,
262.3952813,
261.8513125,
261.2162188,
261.41725,
261.4505,
262.5389063,
262.7011875,
264.5111875,
265.0908438,
266.4669688,
266.982,
269.5724375,
272.6273125,
276.0823438,
278.6725938,
278.9447188,
282.3138438,
283.5807813,
287.71975,
289.4668125,
292.6224063,
293.1471563,
294.454625,
296.64825,
296.9156875,
299.6895312,
299.9866875,
300.5694063,
300.8919375,
301.6072812,
303.0401875,
304.3287813,
305.5685625,
305.2804063,
305.3450625,
306.41125,
304.97975,
304.093,
302.2598438,
299.759125,
297.9385938,
296.5494687,
295.9880625,
294.4057187,
292.1734062,
288.5705313,
287.5790312,
287.260625,
285.065625,
284.003875,
282.296,
280.21475,
278.3909062,
279.3425625,
278.6982812,
277.3845313,
277.4313438,
274.4988125,
269.9588125,
266.2974687,
263.1089687,
258.914375,
256.3394688,
253.1776875,
249.3480625,
245.754375,
244.3289063,
243.505125,
240.4328438,
239.1782813,
234.8760625,
233.4322188,
232.3403125,
233.6371562,
236.1888125,
235.6044062,
237.5987813,
237.4326875,
238.3748438,
239.2099688,
240.0319063,
239.5305313,
237.12,
236.4535,
236.349875,
235.5594063,
236.693375,
236.89625,
236.4162813,
234.83875,
234.30375,
236.0059062,
236.2275313,
237.1800312,
237.9955,
239.8650313,
240.56975,
244.0635313,
247.9160937,
248.371875,
249.763375,
251.0771875,
252.3690937,
250.0538438,
249.5929062,
247.4175937,
244.5324687,
244.3275937,
243.0425312,
242.10075,
238.3347812,
235.6199062,
232.4165,
228.7086563,
225.9411875,
222.6278437,
219.6418125,
216.5160313,
215.4243438,
214.4702188,
213.2948125,
213.9400938,
214.531375,
213.6060625,
213.3244063,
214.0525,
212.9493125,
213.4998438,
214.9810313,
216.613125,
217.16375,
218.8560313,
221.8943125,
223.2050938,
226.6165938,
228.5365625,
232.9115,
236.0225625,
238.487625,
243.64175,
247.7306875,
252.8889063,
257.3053438,
262.729375,
264.7477667,
266.1277143,
270.9441538,
272.8412083,
273.7040455,
275.47495,
275.6642222
], dtype=np.float64)


time = 60.0/5.0



gammasignalarr = np.multiply(gammasignalarr, time)
thermalsignalarr = np.multiply(thermalsignalarr, time)
fastsignalarr = np.multiply(fastsignalarr, time)

gammasignalarr = np.multiply(gammasignalarr, 12)
thermalsignalarr = np.multiply(thermalsignalarr, 12)
fastsignalarr = np.multiply(fastsignalarr, 12)

#Detector Efficiency
gammasignalarr = np.multiply(gammasignalarr, 0.1)
thermalsignalarr = np.multiply(thermalsignalarr, 0.05)
fastsignalarr = np.multiply(fastsignalarr, 0.01)






for i in range(len(gammasignalarr)):
	gammasignalarr[i] = np.random.normal(gammasignalarr[i],np.sqrt(gammasignalarr[i]))

for i in range(len(thermalsignalarr)):
	thermalsignalarr[i] = np.random.normal(thermalsignalarr[i],np.sqrt(thermalsignalarr[i]))


for i in range(len(fastsignalarr)):
	fastsignalarr[i] = np.random.normal(fastsignalarr[i],np.sqrt(fastsignalarr[i]))

gammasignalarr = np.round(gammasignalarr)
thermalsignalarr = np.round(thermalsignalarr)
fastsignalarr = np.round(fastsignalarr)

gammasignalErr = np.sqrt(gammasignalarr)
thermalsignalErr = np.sqrt(thermalsignalarr)
fastsignalErr = np.sqrt(fastsignalarr)


#Normalize
thermalSum = np.sum(thermalsignalarr)
gammaSum = np.sum(gammasignalarr)
fastSum = np.sum(fastsignalarr)
gammasignalarr = np.multiply(gammasignalarr, 1/gammaSum)
thermalsignalarr = np.multiply(thermalsignalarr, 1/thermalSum)
fastsignalarr = np.multiply(fastsignalarr, 1/fastSum)


gammasignalErr = np.multiply(gammasignalErr, 1/gammaSum)

thermalsignalErr = np.multiply(thermalsignalErr, 1/thermalSum)
fastsignalErr = np.multiply(fastsignalErr, 1/fastSum)


angleArr = [x for x in range(360)]

plt.style.use('classic')
plt.xlabel("Mask Angle (deg)")
plt.ylabel("Normalized Detector Counts (a.u.)")
plt.xlim(0,360)
#plt.ylim(0,120)

plt.errorbar(angleArr, gammasignalarr, gammasignalErr, elinewidth=0.4, capsize=1,capthick=1, fmt = 'bo', markersize=3, ecolor="black")
#plt.errorbar(angleArr, thermalsignalarr, thermalsignalErr, elinewidth=0.4, capsize=1,capthick=1, fmt = 'bo', markersize=3, ecolor="black")
#plt.errorbar(angleArr, fastsignalarr, fastsignalErr, elinewidth=0.4, capsize=1,capthick=1, fmt = 'bo', markersize=3, ecolor="black")

plt.show()